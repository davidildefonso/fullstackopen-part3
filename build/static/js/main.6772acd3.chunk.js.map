{"version":3,"sources":["components/Input.js","components/Form.js","components/UList.js","components/Section.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Input","changeHandler","label","value","onChange","Form","props","onSubmit","inputData","map","data","id","type","buttonText","UList","handleClick","person","name","number","onClick","Section","section","title","searchName","changeHandlerName","valueName","labelName","changePhoneHandler","valuePhone","labelPhone","addPerson","persons","Notification","message","className","msg","baseUrl","personService","getAll","axios","get","then","response","create","newObject","post","update","put","remove","delete","App","useState","setPersons","newName","setNewName","newPhone","setNewPhone","filter","setFilter","setSearchName","setMessage","a","useEffect","fetchData","showNotification","setTimeout","event","preventDefault","personObject","personExists","find","window","confirm","error","concat","numbersToShow","match","RegExp","targetPerson","target","ReactDOM","render","content","date","important","document","getElementById"],"mappings":"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","file":"static/js/main.6772acd3.chunk.js","sourcesContent":["import React  from \"react\";\r\n\r\nconst Input = ({ changeHandler, label, value  }) => {\r\n  return (\r\n    \t<div>\r\n\t\t\t\t\t\t{label} <input value={value}  onChange={changeHandler} />\r\n\t\t\t</div>\r\n  )\r\n}\r\n\r\n\r\nexport default Input;","import React  from \"react\";\r\nimport Input from \"./Input.js\";\r\n\r\nconst Form = ( props ) => {\r\n\r\n\t\t\t\t\t\r\n\t\treturn (\r\n\t\t\t\t<form  onSubmit={props.onSubmit} >\r\n\t\t\t\t\t\t{ props.inputData.map(data => \t<Input key = {data.id} changeHandler = {data.changeHandler}  value = {data.value} label = {data.label} />  )  }\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<button type=\"submit\">{props.buttonText} </button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t)\r\n}\r\n\r\n\r\nexport default Form;","import React  from \"react\";\r\n\r\nconst UList = ({ data, handleClick  }) => {\r\n\r\n  return (\r\n    \r\n\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t\t{data.map(person => \r\n\t\t\t\t\t\t\t\t\t\t\t\t<li key={person.id} > {person.name} {person.number} <button  onClick={() => handleClick(person.id)} >Delete</button> </li> \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\r\n  );\r\n\r\n}\r\n\r\n\r\nexport default UList;","import React  from \"react\";\r\nimport Input from \"./Input.js\";\r\nimport Form from \"./Form.js\";\r\nimport UList from \"./UList.js\";\r\n\r\nconst Section = (  props  ) => {\r\n\r\n\tif(props.section === \"title\"){\t\r\n\t\t\treturn (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<h2> {props.title} </h2>\r\n\t\t\t\t\t\t\t<Input  changeHandler = {props.changeHandler}  value = {props.searchName} label = {props.label} />\r\n\t\t\t\t\t</>\t\t\t\r\n\t\t\t);\t\r\n\t}\r\n\r\n\tif(props.section === \"form\"){\r\n\t\t\tconst inputData = [\r\n\t\t\t\t \t{\tid: 1,  changeHandler : props.changeHandlerName,  value : props.valueName, label : props.labelName\t},\r\n\t\t\t\t\t{\tid: 2,  changeHandler : props.changePhoneHandler,  value : props.valuePhone, label : props.labelPhone\t\t}\t\t\t\t\t\r\n\t\t\t];\r\n\r\n\t\t  return (\r\n\t\t\t\t<>\r\n\t\t\t\t\t\t<h2>{props.title}</h2>\r\n\t\t\t\t\t\t<Form  onSubmit={props.addPerson}  buttonText = {props.buttonText} \tinputData = {inputData} />\t\t\t\t\t\t\r\n\t\t\t\t</>\t\t\t\t\r\n\t\t\t);\r\n\t\r\n\t}\r\n\r\n\treturn (\r\n\t \t\t<>\r\n\t\t\t\t\t\t<h2>{props.title}</h2>\r\n\t\t\t\t\t\t<UList  data = {props.persons} handleClick = {props.handleClick} />\t\t\t\t\t\t\t\t\r\n\t\t\t</>\t\t\t\t\r\n\t);\r\n}\r\n\r\n\r\nexport default Section;","import React  from \"react\";\r\n\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n\tconst className = message.type === \"success\" ? \"success\" : \"error\" ; \r\n\r\n  return (\r\n    <div className={className}>\r\n      {message.msg}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Notification;\r\n\r\n","import axios from 'axios';\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request =  axios.get(baseUrl);\r\n\treturn request.then(response => response.data);\r\n}\r\n\r\nconst create = newObject => {\r\n  const request =  axios.post(baseUrl, newObject);\r\n\treturn request.then(response => response.data);\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request =  axios.put(`${baseUrl}/${id}`, newObject);\r\n\treturn request.then(response => response.data);\r\n}\r\n\r\nconst remove = (id) => {\r\n  const request =  axios.delete(`${baseUrl}/${id}`);\r\n\treturn request.then(response => response.data);\r\n}\r\n\r\nconst personService =  { \r\n  getAll, \r\n  create, \r\n  update ,\r\n\tremove\r\n};\r\n\r\nexport default personService;","import React, { useState , useEffect} from \"react\";\nimport Section from \"./components/Section.js\";\nimport Notification from \"./components/Notification.js\";\nimport personService from './services/persons.js';\n\nconst App = ({ data }) => {\n\n\n\n\tconst [ persons, setPersons ] = useState() ;\n  const [ newName, setNewName ] = useState('');\n\tconst [ newPhone, setNewPhone ] = useState('');\n\tconst [ filter, setFilter ] = useState(false);\n\tconst [ searchName, setSearchName ] = useState(\"\");\n\tconst [message, setMessage] = useState(null);\n\n\tuseEffect(  () => {\t\n\t\t\tfetchData();\t\t\n\t}, []);\n\n\tasync function fetchData() {\n\t\t\tconst data = await personService.getAll();\n\t\t\tsetPersons(data);\n\t};\n\n\tconst showNotification = (msg, type = \"success\") => {\n\t\t\t  setMessage( {msg, type} );\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsetMessage(null)\n\t\t\t\t}, 5000)\n\t}\n\n\n\n  const addPerson = async (event) => {\n    event.preventDefault();\n\n\t\tconst personObject = {\n\t\t\tname: newName,\n\t\t\tnumber: newPhone,\t\t\n\t\t};\n\n\t\tconst personExists = persons.find(person =>  person.name === newName);\n\n\t\tif(personExists){\n\n\t\t\t\tconst confirmUpdateNumber = window.confirm(` ${ newName } was already added to the phonebook, do you want to replace their phone number ?`);\n\n\t\t\t\tif(confirmUpdateNumber){\n\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\t\tconst data = await personService.update(personExists.id, personObject);\n\t\t\t\t\t\t\t\tsetPersons(persons.map(person => person.id === data.id ?  data : person  ));\n\t\t\t\t\t\t\t\tshowNotification(`${data.name} number was updated.`);\n\t\t\t\t\t\t}catch(e){\n\t\t\n\t\t\t\t\t\t\t\tshowNotification(e.response.data.error);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tsetNewName('');\n\t\t\t\tsetNewPhone('');\n\n\t\t\t\treturn;\n\t\t}\n  \n\n\t\ttry {\n\t\t\t\tconst data = await personService.create(personObject);\n\t\t\t\tsetPersons(persons.concat(data));\n\t\t\t\tsetNewName('');\n\t\t\t\tsetNewPhone('');\n\t\t} catch (e) {\n\t\t\t\t\n\t\t\t\tshowNotification(e.response.data.error);\n\t\t}\n\t\n\t\n  \n\t}\n\n\tconst handleNewNameChange = (event) => {   \n    setNewName(event.target.value)\n  }\n\n\tconst handleNewPhoneChange = (event) => {   \n\n    setNewPhone(event.target.value)\n  }\n\n\tconst handleSearchChange = (event) => {  \n\t\t\tsetSearchName(event.target.value); \n\t\t\tif(event.target.value !== \"\"){\n\t\t\t\tsetFilter(true);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsetFilter(false);\n  }\n\n\tconst numbersToShow = () => {\n\t\t\tif(!filter) return persons;\n\t\t\treturn persons.filter(person =>  person.name.match(new RegExp(searchName, \"i\")));\n\t} ;\n\n\tconst handleClick = async (id)  => {\n\t\t\tconst targetPerson = persons.find(person => person.id === id).name ;\n\t\t\tconst confirmDelete = window.confirm(`Are you sure to delete  ${ targetPerson } from the phonebook?`);\n\t\t\tif(confirmDelete){\n\t\t\t\t\tawait personService.remove(id);\n\t\t\t\t\tsetPersons(persons.filter(person => person.id !== id));\n\t\t\t\t\tshowNotification(`${targetPerson}  was deleted from  the phonebook.`);\n\t\t\t}\n\t\t\n\t};\n\n\n\n\tif(numbersToShow()){\n\t\t\treturn (\n\t\t\t\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Notification message = {message} />\n\n\t\t\t\t\t\t\t<Section title={\"Phonebook\"}  changeHandler = {handleSearchChange}  value = {searchName} label = {\"filter shown with:\"}   section = { \"title\"}  />\n\n\n\t\t\t\t\t\t\t<Section title={\"Add new number\"}  changeHandlerName = {handleNewNameChange}  valueName = {newName} labelName = {\"name:\"}   section = { \"form\"} \n\t\t\t\t\t\t\t\tchangePhoneHandler = {handleNewPhoneChange}  valuePhone = {newPhone} labelPhone = {\"phone:\"}  buttonText = {\"add\"}  addPerson = {addPerson} />\n\n\t\t\t\t\t\t\t<Section title={\"Numbers\"}  persons = {numbersToShow()} handleClick = {handleClick}  section = { \"persons\"}  />\n\n\t\t\t\t\t</div>\n\t\t\t\t\n\n\n\t\t\t)\n\t}\n\n\treturn null ;\n\n\n};\n\nexport default App;","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'; \n\nconst notes = [\n  {\n    id: 1,\n    content: 'HTML is easy',\n    date: '2019-05-30T17:30:31.098Z',\n    important: true\n  },\n  {\n    id: 2,\n    content: 'Browser can execute only JavaScript',\n    date: '2019-05-30T18:39:34.091Z',\n    important: false\n  },\n  {\n    id: 3,\n    content: 'GET and POST are the most important methods of HTTP protocol',\n    date: '2019-05-30T19:20:14.298Z',\n    important: true\n  }\n];\n\n\n\nReactDOM.render(\n  <App data={notes} />,\n  document.getElementById('root')\n);"],"sourceRoot":""}